##install packages

install.packages(c("tidyverse", "readr", "lubridate", "hms", "data.table", "dplyr"))

##load library

library(tidyverse)
library(lubridate) 
library(hms)
library(readr)
library(data.table)
library(dplyr)

##import raw data

may_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_05-divvy-tripdata.csv")
june_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_06-divvy-tripdata.csv")
july_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_07-divvy-tripdata.csv")
aug_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_08-divvy-tripdata.csv")
sep_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_09-divvy-tripdata.csv")
oct_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_10-divvy-tripdata.csv")
nov_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_11-divvy-tripdata.csv")
dec_2022 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2022_12-divvy-tripdata.csv")
jan_2023 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2023_01-divvy-tripdata.csv")
feb_2023 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2023_02-divvy-tripdata.csv")
march_2023 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2023_03-divvy-tripdata.csv")
april_2023 <- read.csv("C:/Users/Ravena_M/Desktop/DA COURSE/Final Project/Raw Data/2023_04-divvy-tripdata.csv")

##combine into 1 data frame

raw_bike_data <- rbind( may_2022,june_2022,july_2022,aug_2022,sep_2022,oct_2022,nov_2022,dec_2022,jan_2023,feb_2023,march_2023,april_2023)

#remove the other data frames

remove( may_2022,june_2022,july_2022,aug_2022,sep_2022,oct_2022,nov_2022,dec_2022,jan_2023,feb_2023,march_2023,april_2023)

##create a duplicate data frame 

raw_bike_df <- raw_bike_data

#create a row with the ride length in minutes

raw_bike_df$ride_length_mins <- difftime(raw_bike_data$ended_at, raw_bike_data$started_at, units = "mins")

-----------------------------------------

###default format is yyyy-mm-dd, use start date

raw_bike_df$date <- as.Date(raw_bike_df$started_at)

##create column for month

raw_bike_df$month <- format(as.Date(raw_bike_df$started_at), "%m")

##column for day of week (dow)

raw_bike_df$day_of_week <- wday(raw_bike_df$started_at)

##convert dow to names

raw_bike_df$day_of_week <- weekdays(as.Date(raw_bike_df$day_of_week, origin = "1970-01-01"))[raw_bike_df$day_of_week]

##convert month to names

raw_bike_df$month <- month.name[as.numeric(format(as.Date(raw_bike_df$started_at), "%m"))]


-----------------------------------------
##remove rows with NA values

raw_bike_df <- na.omit(raw_bike_df) 

##remove duplicate rows 

raw_bike_df <- distinct(raw_bike_df)

##remove where ride_length is 0 or negative

raw_bike_df <- raw_bike_df%>%
  filter(ride_length_mins>0)

##remove columns not needed: ride_id, start_station_id, end_station_id, start_lat, start_long, end_lat, end_lng

raw_bike_df <- raw_bike_df %>% 
  select(-c(ride_id, start_station_id, end_station_id,start_lat,start_lng,end_lat,end_lng)) 


---------------------------------------

##total ride count

total_count <- raw_bike_df%>%
	nrow()

##average total ride length

total_avg_ride <- raw_bike_df %>%
  summarize(avg_ride_length = mean(ride_length_mins))

---------------------------------------------

##data frame counts each dow

dow_count <- raw_bike_df%>%
	count(day_of_week)

##how many rides per day, by usertype 

dow_ride_membership <- raw_bike_df %>%
  group_by(day_of_week, member_casual) %>%
  summarize(ride_membership = n())

##average length of ride per day by usertype

dow_user_avg_ride <- raw_bike_df %>%
  group_by(day_of_week, member_casual) %>%
  summarize(avg_ride_length = mean(ride_length_mins))

##how many rides per day, by biketype

dow_rideable_type <- raw_bike_df %>%
  group_by(day_of_week, rideable_type) %>%
  summarize(ride_membership = n())

##average length of ride per day by bike type

dow_bike_avg_ride <- raw_bike_df %>%
  group_by(day_of_week, rideable_type) %>%
  summarize(avg_ride_length = mean(ride_length_mins))

-----------------------------------------------------
##ride per month

month_count <- raw_bike_df%>%
	count(month)

##ride per month by bike type

month_rideable_type <-raw_bike_df%>%
group_by(month)%>%
summarize(rideable_type = n())

##average ride length per month, by biketype

month_bike_avg_ride <- raw_bike_df %>%
  group_by(month, rideable_type) %>%
  summarize(avg_ride_length = mean(ride_length_mins))

##ride per month by usertype

month_user_type <-raw_bike_df%>%
group_by(month)%>%
summarize(member_casual = n())

##average ride length per month, by usertype

month_user_avg_ride <- raw_bike_df %>%
  group_by(month, member_casual) %>%
  summarize(avg_ride_length = mean(ride_length_mins))

##count dow per month 

dow_month_count <- raw_bike_df %>%
  group_by(month, day_of_week) %>%
  summarize(count = n())

-----------------------------------------

##count by bike type

bike_type_count <- raw_bike_df%>%
	count(rideable_type)

##average ride length by biketype

bike_avg_ride <- raw_bike_df %>%
  group_by(rideable_type) %>%
  summarize(avg_ride_length = mean(ride_length_mins))

--------------------------------------------------

##count by usertype

user_type_count <- raw_bike_df%>%
	count(member_casual)

##average ride length by usertype

user_avg_ride <- raw_bike_df %>%
  group_by(member_casual) %>%
  summarize(avg_ride_length = mean(ride_length_mins))

##how many rides per bike type, by usertype

rideable_type <- raw_bike_df %>%
  group_by(rideable_type, member_casual) %>%
  summarize(member_casual = n())
---------------------------------------------------

##how many station start

start_station_ct <- raw_bike_df%>%
	count(start_station_name)%>%
	arrange(desc(n))

##how many station end

end_station_ct <- raw_bike_df%>%
	count(end_station_name)%>%
	arrange(desc(n))

##start station ranking

start_station_rank <- raw_bike_df %>%
  group_by(start_station_name) %>%
  summarize(count = n()) %>%
  arrange(desc(count))

##end station ranking

end_station_rank <- raw_bike_df %>%
  group_by(end_station_name) %>%
  summarize(count = n()) %>%
  arrange(desc(count))

##start station ranking by usertype

start_station_user <- raw_bike_df %>%
  group_by(start_station_name, member_casual) %>%
  summarize(count = n()) %>%
  arrange(desc(count))

##end station ranking by usertype

end_station_user <- raw_bike_df %>%
  group_by(end_station_name, member_casual) %>%
  summarize(count = n()) %>%
  arrange(desc(count))

---------------------------------------------------------------

##start/end station pair ranking 

start_end_rank <- raw_bike_df %>%
  group_by(start_station_name, end_station_name) %>%
  summarize(pair_count = n()) %>%
  arrange(desc(pair_count))

##start/end station pair ranking, by month

start_end_month_rank <- raw_bike_df %>%
  group_by(month, start_station_name, end_station_name) %>%
  summarize(pair_count = n()) %>%
  group_by(month) %>%
  filter(rank(desc(pair_count))<=5) %>%
  ungroup()

##start/end station pair ranking, by dow 

start_end_dow_rank <- raw_bike_df %>%
  group_by(day_of_week, start_station_name, end_station_name) %>%
  summarize(pair_count = n()) %>%
  group_by(day_of_week) %>%
  filter(rank(desc(pair_count)) <= 5) %>%
  ungroup()

##start/end station pair ranking, by usertype

start_end_user <- raw_bike_df %>%
  group_by(member_casual, start_station_name, end_station_name) %>%
  summarize(pair_count = n()) %>%
  group_by(member_casual) %>%
  filter(rank(desc(pair_count))<=5) %>%
  ungroup()


